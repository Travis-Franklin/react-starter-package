Axios is library that sends requests. 
--hey server, I'm talking to you from react

Express is when you create a server that is listening for requests. 

AJAX= asynchronous javascript and XML, more of a technique not a technology, can substitue ajax, axios, get
Axios is the most popular


import axios from 'axios';
const API_ENDPOINT = 'https://endpoint.com'

axios.get(API_ENDPOINT)
    .then (response => {
        console.log(response);
    })


NEXT:

note: data is the term that axios has built in that accesses the information we will need. 
Add .key in order to access the object, below the key is .name


function App() {
    axios.get(API_ENDPOINT)
    .then (response => {
        console.log(response.data.name);
    })
}

Turn it into a class, otherwise you can't save the ajax request

class App extends React.Component {
    constructor (props) {
        super(props);
        this.state = {
            name: 'not their real name'
        }
    }

    render () {
        return (
            <header>{this.state.name}</header>

        )
    }

}

componentDidMount

class App extends React.Component {
    constructor (props) {
        super(props);
        this.state = {
            name: 'not their real name'
        }
    }

    componentDidMount(){
        //this is the methodthat react calls after the component has been attached to the DOM as a real element
        //this is the first React method where it is safe to call this.setState
          axios.get(API_ENDPOINT)
            .then (response => {
            console.log(response.data.name);
            this.setState({
                name:response.data.name
            })
    })


    }

    render () {
        return (
            <header>{this.state.name}</header>

        )
    }

}

